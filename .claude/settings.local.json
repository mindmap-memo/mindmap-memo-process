{
  "permissions": {
    "allow": [
      "Bash(Stop-Process -Force)",
      "Bash(Start-Sleep -Seconds 2)",
      "Bash(npx kill-port:*)",
      "Bash(npm start)",
      "Bash(git add:*)",
      "Bash(git commit -m \"$(cat <<''EOF''\n카테고리에 단축 이동 기능 추가 및 자동 삭제 구현\n\n- 카테고리 블록/영역/라벨 우클릭 시 단축 이동 추가 가능\n- 카테고리 영역과 라벨에서 우클릭 시 컨텍스트 메뉴 표시\n- 메모/카테고리 삭제 시 단축 이동 목록에서 자동 제거\n- 다중 선택 삭제 시에도 단축 이동 자동 정리\n\n🤖 Generated with [Claude Code](https://claude.com/claude-code)\n\nCo-Authored-By: Claude <noreply@anthropic.com>\nEOF\n)\")",
      "Bash(npx tsc:*)",
      "Bash(node:*)",
      "Bash(Stop-Process -Id 18852 -Force)",
      "Bash(taskkill:*)",
      "Bash(Stop-Process -Name node -Force)",
      "Bash(Stop-Process -Name \"node\" -Force -ErrorAction SilentlyContinue)",
      "Bash(powershell:*)",
      "Bash(npm run build:*)",
      "Bash(timeout 15 bash:*)",
      "Bash(npm run dev:*)",
      "Bash(timeout 10 bash -c 'while ! curl -s http://localhost:3000 > /dev/null 2>&1; do sleep 1; done; echo \"\"Server is up\"\"')",
      "Bash(npm install:*)",
      "Bash(git checkout:*)",
      "Bash(git stash:*)",
      "Bash(netstat:*)",
      "Bash(findstr:*)",
      "Bash(timeout 5 bash:*)",
      "Bash(curl:*)",
      "Bash(find:*)",
      "Bash(for file in \"c:\\Users\\ghpjj\\OneDrive\\Desktop\\project\\mindmap-memo-next\\src\\components\\RightPanel\\hooks\"/*.{ts,tsx})",
      "Bash(do:*)",
      "Bash(wc:*)",
      "Bash(done)",
      "Bash(awk:*)",
      "Bash(Remove-Item -Recurse -Force .next 2)",
      "Bash($null)",
      "Bash(nul)",
      "Bash(git commit -m \"$(cat <<''EOF''\nrefactor: Canvas와 MemoBlock 컴포넌트 대규모 리팩토링\n\n- MemoBlock.tsx: 1168줄 → 822줄 (346줄, 30% 감소)\n  - useMemoBlockDrag 훅으로 드래그 로직 분리\n  - renderingUtils로 렌더링 유틸리티 함수 분리\n\n- useCanvasRendering.tsx: 1496줄 → 1270줄 (226줄, 15% 감소)\n  - useCategoryAreaCalculation 훅으로 영역 계산 로직 분리\n  - categoryAreaDragHandlers 유틸로 드래그 핸들러 분리\n\n- 새로운 Canvas 훅들 추가:\n  - useCacheManagement: 캐시 관리\n  - useCanvasKeyboard: 키보드 이벤트 처리\n  - useCategoryAreaColors: 카테고리 영역 색상 관리\n  - useCategoryHandlers: 카테고리 핸들러\n  - useConnectionPoints: 연결점 계산\n  - useContextMenuEffect: 컨텍스트 메뉴 효과\n\n- 코드 품질 개선:\n  - 중복 코드 제거\n  - 함수 단일 책임 원칙 준수\n  - 재사용성 및 테스트 용이성 향상\n  - CLAUDE.md 리팩토링 가이드라인 준수\n\n🤖 Generated with [Claude Code](https://claude.com/claude-code)\n\nCo-Authored-By: Claude <noreply@anthropic.com>\nEOF\n)\")",
      "Bash(git merge:*)",
      "Bash(git push:*)",
      "Bash(timeout 10 bash:*)",
      "Bash(git log:*)",
      "Bash(if exist .next rmdir /s /q .next)",
      "Bash(if exist nul del nul 2)",
      "Bash(NUL)",
      "Bash(git rm:*)",
      "Bash(git commit:*)"
    ],
    "deny": [],
    "ask": []
  }
}
